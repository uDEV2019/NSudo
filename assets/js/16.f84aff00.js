(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{429:function(s,t,a){"use strict";a.r(t);var e=a(35),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[s._v("#")]),s._v(" Usage")]),s._v(" "),a("h2",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[s._v("#")]),s._v(" Quick Start")]),s._v(" "),a("p",[s._v("Please go to the [CPU Architecture] folder and click NSudo.exe. Follow the\nprompts. For example, if you want to use 64-bit NSudo on your Intel or AMD\ndevice, you need to go to the x64 folder and click NSudoG.exe")]),s._v(" "),a("h2",{attrs:{id:"command-line"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line"}},[s._v("#")]),s._v(" Command Line")]),s._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Format")]),s._v(": NSudoL [ Options and parameters ] Command line or ShortCut Command")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Options")]),s._v(":")]),s._v("\n\n-U:[ Option ] Create a process with specified user option.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Available")]),s._v(" options:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("T")]),s._v(" TrustedInstaller")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("S")]),s._v(" System")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("C")]),s._v(" Current User")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("E")]),s._v(" Current User (Elevated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("P")]),s._v(" Current Process")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("D")]),s._v(" Current Process (Drop right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": This is a mandatory parameter.")]),s._v("\n\n-P:[ Option ] Create a process with specified privilege option. \n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Available")]),s._v(" options:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("E")]),s._v(" Enable All Privileges")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("D")]),s._v(" Disable All Privileges")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to use the default privileges to create a process, please do ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" include the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-P"')]),s._v(" parameter.")]),s._v("\n\n-M:[ Option ] Create a process with specified Integrity Level option.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Available")]),s._v(" options:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("S")]),s._v(" System")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("H")]),s._v(" High")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("M")]),s._v(" Medium")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("L")]),s._v(" Low")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to use the default Integrity Level to create a process, please ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not include the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-M"')]),s._v(" parameter.")]),s._v("\n\n-Priority:[ Option ] Create a process with specified process priority option.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Available")]),s._v(" options:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Idle")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BelowNormal")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Normal")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AboveNormal")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("High")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RealTime")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to use the default Process Priority to create a process, please")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not include the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Priority"')]),s._v(" parameter.")]),s._v("\n\n-ShowWindowMode:[ Option ] Create a process with specified window mode option.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Available")]),s._v(" options:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Show")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Hide")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Maximize")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Minimize")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to use the default window mode to create a process, please do ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" include the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-ShowWindowMode"')]),s._v(" parameter.")]),s._v("\n\n-Wait Make NSudo Launcher wait for the created process to end before exiting.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you don't want to wait, please do not include the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wait"')]),s._v(" parameter.")]),s._v("\n\n-CurrentDirectory:[ DirectoryPath ] Set the current directory for the process.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to use the NSudo Launcher's current directory, please do not ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-CurrentDirectory"')]),s._v(" parameter.")]),s._v("\n\n-UseCurrentConsole Create a process with the current console window.\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(": If you want to create a process with the new console window, please do not ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-UseCurrentConsole"')]),s._v(" parameter.")]),s._v("\n\n-Version Show version information of NSudo Launcher.\n\n-? Show this content.\n-H Show this content.\n-Help Show this content.\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Please")]),s._v(" use https://github.com/Thdub/NSudo_Installer for context menu management.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PS")]),s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("1")]),s._v(". All NSudo Launcher command arguments is case-insensitive.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("2")]),s._v(". You can use the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--"')]),s._v(" override "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" and use the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"="')]),s._v(" override "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" in")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("the")]),s._v(" command line parameters.  For example, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/U:T"')]),s._v(" and "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-U=T"')]),s._v(" are ")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("equivalent")]),s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("3")]),s._v(". To ensure the best experience, NSudoLC does not support context menu.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Example")]),s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" you want to run Command Prompt with TrustedInstaller, enable all ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("privileges")]),s._v(" and the default Integrity Level.")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NSudoL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("-U")]),a("span",{pre:!0,attrs:{class:"token label property"}},[s._v(":T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("-P")]),a("span",{pre:!0,attrs:{class:"token label property"}},[s._v(":E")]),s._v(" cmd")]),s._v("\n")])])]),a("p",[s._v("Example: If you want to run Command Prompt with TrustedInstaller, enable all\nprivileges and the default Integrity Level:")]),s._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NSudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("-U")]),a("span",{pre:!0,attrs:{class:"token label property"}},[s._v(":T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("-P")]),a("span",{pre:!0,attrs:{class:"token label property"}},[s._v(":E")]),s._v(" cmd")]),s._v("\n")])])]),a("p",[s._v("Starting from NSudo 5.0.1708.16, the command line nested quotes is supported.\nFor example:")]),s._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NSudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("-U")]),a("span",{pre:!0,attrs:{class:"token label property"}},[s._v(":T")]),s._v(" cmd "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[s._v("/c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dir "')]),s._v("C:\\Program Files"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" & pause"')])]),s._v("\n")])])]),a("h2",{attrs:{id:"shortcut-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shortcut-list"}},[s._v("#")]),s._v(" Shortcut List")]),s._v(" "),a("p",[s._v("You can edit NSudo.json to custom the Shortcut list, here are the demo\n(NSudo.json in the NSudo.exe's folder):")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ShortCutList_V2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Command Prompt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"PowerShell"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"powershell"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"PowerShell ISE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"powershell_ise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Edit Hosts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"notepad %windir%\\\\System32\\\\Drivers\\\\etc\\\\hosts"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);